{"version":3,"sources":["buttons.jsx","box.jsx","grid.jsx","footer.jsx","modal.jsx","index.js"],"names":["Buttons","handleSelect","evt","_this","props","gridSize","react_default","a","createElement","className","ButtonToolbar","Button","variant","onClick","this","playButton","pauseButton","clear","slow","fast","seed","DropdownButton","title","id","onSelect","Dropdown","Item","eventKey","React","Component","Box","selectBox","row","col","boxClass","Grid","width","cols","rowsArr","i","rows","j","boxId","gridFull","push","box","key","style","Footer","href","target","rel","customStyles","content","top","left","right","bottom","marginRight","transform","textAlign","backgroundImage","color","maxWidth","borderRadius","ModalPop","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","showModal","handleCloseModal","bind","assertThisInitialized","setState","lib_default","isOpen","onRequestClose","Main","gridCopy","arrayClone","Math","floor","random","clearInterval","intervalId","setInterval","play","speed","grid","Array","fill","map","generation","size","g","g2","count","modal","buttons","footer","arr","JSON","parse","stringify","ReactDOM","render","src_Main","document","getElementById"],"mappings":"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","file":"static/js/main.e6dcd68b.chunk.js","sourcesContent":["import React from 'react';\n\nimport { ButtonToolbar, Button, Dropdown, DropdownButton } from 'react-bootstrap';\n\nclass Buttons extends React.Component {\n    handleSelect = (evt) => {\n        this.props.gridSize(evt);\n    }\n    render() {\n        return (\n            <div className=\"center\">\n                <ButtonToolbar>\n                    <Button\n                        variant=\"outline-success\"\n                        className=\"btn btn-default\"\n                        onClick={this.props.playButton}\n                    >\n                        Play\n                    </Button>\n                    <Button\n                        className=\"btn btn-default\"\n                        onClick={this.props.pauseButton}\n                    >\n                        Pause\n                    </Button>\n                    <Button\n                        className=\"btn btn-default\"\n                        onClick={this.props.clear}\n                    >\n                        Clear\n                    </Button>\n                    <Button\n                        className=\"btn btn-default\"\n                        onClick={this.props.slow}\n                    >\n                        Slow\n                    </Button>\n                    <Button\n                        className=\"btn btn-default\"\n                        onClick={this.props.fast}\n                    >\n                        Fast\n                    </Button>\n                    <Button\n                        className=\"btn btn-default\"\n                        onClick={this.props.seed}\n                    >\n                        Seed\n                    </Button>\n                    \n                    <DropdownButton\n                        title=\"Grid Size\"\n                        id=\"size-menu\"\n                        onSelect={this.handleSelect}\n                    >\n                        <Dropdown.Item eventKey=\"1\">20x10</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"2\">50x30</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"3\">70x50</Dropdown.Item>\n                    </DropdownButton>\n                </ButtonToolbar>\n            </div>\n        );\n    }\n}\n\nexport default Buttons;","import React from 'react';\n\n\nclass Box extends React.Component {\n    selectBox = () => {\n        this.props.selectBox(this.props.row, this.props.col)\n    }\n\n    render() {\n        return (\n            <div\n                className={this.props.boxClass}\n                id={this.props.id}\n                onClick={this.selectBox}\n            >\n            </div>\n        )\n    }\n}\n\nexport default Box;","import React from 'react';\n\nimport Box from './box';\n\nclass Grid extends React.Component {\n    render() {\n        const width = (this.props.cols * 14);\n        var rowsArr = [];\n\n        var boxClass = \"\";\n        for (var i = 0; i < this.props.rows; i++) {\n            for (var j = 0; j < this.props.cols; j++) {\n                let boxId = i + \" \" + j;\n                boxClass = this.props.gridFull[i][j] ? \"box on\" : \"box off\";\n                rowsArr.push(\n                    <Box\n                        boxClass={boxClass}\n                        key={boxId}\n                        boxId={boxId}\n                        row={i}\n                        col={j}\n                        selectBox={this.props.selectBox}\n                    />\n                );\n            }\n        }\n        return (\n            <div className=\"grid\" style={{ width: width }}>\n                {rowsArr}\n            </div>\n        );\n    }\n}\n\nexport default Grid;","import React from 'react';\n\nconst Footer = () => {\n\n    return (\n        <div className=\"footer\">\n            <a href=\"https://github.com/StephenLi305\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github\"></i></a>\n            <a href=\"https://www.linkedin.com/in/stephenli305/\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-linkedin-in\"></i></a>\n            <a href=\"https://stephenli.fun/\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fas fa-portrait\"></i></a>\n        </div>\n    )\n\n}\n\nexport default Footer;\n","\n\nimport React from 'react';\nimport Modal from 'react-modal';\n\n\nconst customStyles = {\n    content: {\n        top: '30%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        textAlign: 'center',\n        width: '80%',\n        backgroundImage:'url(http://subtlepatterns2015.subtlepatterns.netdna-cdn.com/patterns/squares.png)',\n        color:'white',\n        maxWidth:'900px',\n        borderRadius:'20px',\n\n    }\n};\n\n\nclass ModalPop extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            showModal: true\n        };\n        this.handleCloseModal = this.handleCloseModal.bind(this);\n    }\n\n\n    handleCloseModal() {\n        this.setState({ showModal: false });\n    }\n\n    render() {\n        return (\n            <Modal\n                isOpen={this.state.showModal}\n                onRequestClose={this.handleCloseModal}\n                style={customStyles}\n            >\n                <div>\n                    <h5>\n                        Conway's Game of Life\n                    </h5>\n                    <br></br>\n                    \n                    <p>\n                        The universe of the Game of Life is an infinite, two-dimensional orthogonal grid of square cells, each of which is in one of two possible states, alive or dead, (or populated and unpopulated, respectively). Every cell interacts with its eight neighbours, which are the cells that are horizontally, vertically, or diagonally adjacent. At each step in time, the following transitions occur:                   \n                    </p>\n                    <br></br>\n\n                    <p>\n                        Any live cell with fewer than two live neighbours dies, as if by underpopulation. <br/>\n                        Any live cell with two or three live neighbours lives on to the next generation.<br/> \n                        Any live cell with more than three live neighbours dies, as if by overpopulation.<br/> \n                        Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.<br/> \n                    </p>\n                    <br></br>\n\n                </div>\n            </Modal>\n        );\n    }\n}\n\nexport default ModalPop;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport Buttons from './buttons';\nimport Grid from './grid';\nimport Footer from './footer';\nimport Modal from './modal';\n\n\nclass Main extends React.Component {\n    constructor(){\n        super();\n        this.speed = 100;\n        this.rows = 30;\n        this.cols = 50;\n\n        this.state = {\n            generation: 0,\n            gridFull: Array(this.rows).fill().map(() => Array(this.cols).fill(false)),\n        };\n    }    \n\n\n\n    selectBox = (row, col) => {\n        let gridCopy = arrayClone(this.state.gridFull);\n        gridCopy[row][col] = !gridCopy[row][col];\n        this.setState({\n            gridFull: gridCopy\n        })\n\n    }\n\n    seed = () => {\n        let gridCopy = arrayClone(this.state.gridFull);\n        for(let i = 0; i < this.rows; i++){\n            for(let j = 0; j < this.cols; j++){\n                if(Math.floor(Math.random() * 4) === 1){\n                    gridCopy[i][j] = true;\n                }\n            }\n        }\n        this.setState({\n            gridFull: gridCopy\n        })\n    }\n\n    playButton = () => {\n        clearInterval(this.intervalId)\n        this.intervalId = setInterval(this.play, this.speed);\n    }\n\n    pauseButton = () => {\n        clearInterval(this.intervalId)\n    }\n\n    slow = () => {\n        this.speed = 1000;\n        this.playButton();\n    }\n\n    fast = () => {\n        this.speed = 100;\n        this.playButton();\n    }\n\n    clear = () => {\n        clearInterval(this.intervalId);\n        let grid = Array(this.rows).fill().map(() => Array(this.cols).fill(false));\n        this.setState({\n            gridFull: grid,\n            generation: 0,\n        })\n    }\n\n    gridSize = (size) => {\n        switch(size) {\n            case \"1\" :\n                this.cols = 20;\n                this.rows = 10;\n            break;\n            case \"2\" :\n                this.cols = 50;\n                this.rows = 30;\n            break;\n            default:\n                this.cols = 70;\n                this.rows = 50;\n        }\n        this.clear();\n    }\n\n    play = () => {\n        let g = this.state.gridFull;\n        let g2 = arrayClone(this.state.gridFull);\n        for(let i = 0; i < this.rows; i++){\n            for(let j = 0; j < this.cols; j++){\n                let count = 0;\n                if (i > 0) if (g[i - 1][j]) count++;\n                if (i > 0 && j > 0) if (g[i - 1][j - 1]) count++;\n                if (i > 0 && j < this.cols - 1) if (g[i - 1][j + 1]) count++;\n                if (j < this.cols - 1) if (g[i][j + 1]) count++;\n                if (j > 0) if (g[i][j - 1]) count++;\n                if (i < this.rows - 1) if (g[i + 1][j]) count++;\n                if (i < this.rows - 1 && j > 0) if (g[i + 1][j - 1]) count++;\n                if (i < this.rows - 1 && j < this.cols - 1) if (g[i + 1][j + 1]) count++;\n                if (g[i][j] && (count < 2 || count > 3)) g2[i][j] = false;\n                if (!g[i][j] && count === 3) g2[i][j] = true;\n            }\n        }\n        this.setState({\n            gridFull: g2,\n            generation: this.state.generation + 1\n        });\n    }\n\n    componentDidMount(){\n        this.seed();\n    }\n\n    render(){\n        return(\n            <div>\n                <Modal/>\n                \n                <h1>Conway's Game of Life</h1>\n\n                <Buttons\n                playButton = {this.playButton}\n                pauseButton = {this.pauseButton}\n                slow = {this.slow}\n                fast = {this.fast}\n                seed = {this.seed}\n                clear = {this.clear}\n                gridSize = {this.gridSize}\n                />\n                \n                <Grid\n                gridFull = {this.state.gridFull}\n                rows = {this.rows}\n                cols = {this.cols}\n                selectBox = {this.selectBox}\n                />\n                \n                <h2>Generation: {this.state.generation}</h2>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nfunction arrayClone(arr){\n    return JSON.parse(JSON.stringify(arr));\n}\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n"],"sourceRoot":""}
{"version":3,"sources":["index.js"],"names":["Box","selectBox","_this","props","row","col","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","this","boxClass","id","onClick","React","Component","Grid","width","cols","rowsArr","i","rows","j","boxId","gridFull","push","key","style","Buttons","handleSelect","evt","_this2","gridSize","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","variant","playButton","pauseButton","clear","slow","fast","seed","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","title","onSelect","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","Item","eventKey","Main","_this3","Object","_Users_stephenli_Desktop_game_of_life_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_stephenli_Desktop_game_of_life_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_stephenli_Desktop_game_of_life_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","gridCopy","arrayClone","state","setState","console","log","Math","floor","random","clearInterval","intervalId","setInterval","play","speed","grid","Array","fill","map","generation","size","g","g2","count","arr","JSON","parse","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e770224d.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { ButtonToolbar,Button, Dropdown, DropdownButton   } from 'react-bootstrap';\n\nclass Box extends React.Component {\n    selectBox = () => {\n        this.props.selectBox(this.props.row, this.props.col)\n    }\n\n    render(){\n        return(\n            <div\n            className = {this.props.boxClass}\n            id = {this.props.id}\n            onClick = {this.selectBox}\n            >\n            </div>\n        )\n    }\n}\n\nclass Grid extends React.Component {\n    render(){\n        const width = (this.props.cols * 14);\n        var rowsArr = [];\n\n        var boxClass = \"\";\n        for(var i = 0; i < this.props.rows; i++){\n            for(var j = 0; j < this.props.cols; j++){\n                let boxId = i + \" \" + j;\n                boxClass = this.props.gridFull[i][j] ? \"box on\" : \"box off\";\n                rowsArr.push(\n                    <Box\n                    boxClass = {boxClass}\n                    key = {boxId}\n                    boxId = {boxId}\n                    row = {i}\n                    col = {j}\n                    selectBox = {this.props.selectBox}\n                    />\n                );\n            }\n        }\n        return (\n          <div className=\"grid\" style={{width:width}}>\n              {rowsArr}\n          </div>\n        );\n    }\n}\n\nclass Buttons extends React.Component {\n    handleSelect = (evt) => {\n        this.props.gridSize(evt);\n    }\n    render(){\n        return (\n          <div className=\"center\">\n            <ButtonToolbar>\n              <Button\n                variant=\"outline-success\"\n                className=\"btn btn-default\"\n                onClick={this.props.playButton}\n              >\n                Play\n              </Button>\n              <Button\n                className=\"btn btn-default\"\n                onClick={this.props.pauseButton}\n              >\n                Pause\n              </Button>\n              <Button\n                className=\"btn btn-default\"\n                onClick={this.props.clear}\n              >\n                Clear\n              </Button>\n              <Button\n                className=\"btn btn-default\"\n                onClick={this.props.slow}\n              >\n                Slow\n              </Button>\n              <Button\n                className=\"btn btn-default\"\n                onClick={this.props.fast}\n              >\n                Fast\n              </Button>\n              <Button\n                className=\"btn btn-default\"\n                onClick={this.props.seed}\n              >\n                Seed\n              </Button>\n              <DropdownButton\n                title=\"Grid Size\"\n                id=\"size-menu\"\n                onSelect={this.handleSelect}\n              >\n                <Dropdown.Item eventKey=\"1\">20x10</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\">50x30</Dropdown.Item>\n                <Dropdown.Item eventKey=\"3\">70x50</Dropdown.Item>\n              </DropdownButton>\n            </ButtonToolbar>\n          </div>\n        );\n    }\n}\n\nclass Main extends React.Component {\n    constructor(){\n        super();\n        this.speed = 100;\n        this.rows = 30;\n        this.cols = 50;\n\n        this.state = {\n            generation: 0,\n            gridFull: Array(this.rows).fill().map(() => Array(this.cols).fill(false)),\n        };\n    }    \n\n\n\n    selectBox = (row, col) => {\n        let gridCopy = arrayClone(this.state.gridFull);\n        gridCopy[row][col] = !gridCopy[row][col];\n        this.setState({\n            gridFull: gridCopy\n        })\n\n    }\n\n    seed = () => {\n        console.log(\"seed\")\n        let gridCopy = arrayClone(this.state.gridFull);\n        for(let i = 0; i < this.rows; i++){\n            for(let j = 0; j < this.cols; j++){\n                if(Math.floor(Math.random() * 4) === 1){\n                    gridCopy[i][j] = true;\n                }\n            }\n        }\n        this.setState({\n            gridFull: gridCopy\n        })\n    }\n\n    playButton = () => {\n        clearInterval(this.intervalId)\n        this.intervalId = setInterval(this.play, this.speed);\n    }\n\n    pauseButton = () => {\n        clearInterval(this.intervalId)\n    }\n\n    slow = () => {\n        this.speed = 1000;\n        this.playButton();\n    }\n\n    fast = () => {\n        this.speed = 100;\n        this.playButton();\n    }\n\n    clear = () => {\n        let grid = Array(this.rows).fill().map(() => Array(this.cols).fill(false));\n        this.setState({\n            gridFull: grid,\n            generation: 0,\n        })\n    }\n\n    gridSize = (size) => {\n        switch(size) {\n            case \"1\" :\n                this.cols = 20;\n                this.rows = 10;\n            break;\n            case \"2\" :\n                this.cols = 50;\n                this.rows = 30;\n            break;\n            default:\n                this.cols = 70;\n                this.rows = 50;\n        }\n        this.clear();\n    }\n\n    play = () => {\n        let g = this.state.gridFull;\n        let g2 = arrayClone(this.state.gridFull);\n        for(let i = 0; i < this.rows; i++){\n            for(let j = 0; j < this.cols; j++){\n                let count = 0;\n                if (i > 0) if (g[i - 1][j]) count++;\n                if (i > 0 && j > 0) if (g[i - 1][j - 1]) count++;\n                if (i > 0 && j < this.cols - 1) if (g[i - 1][j + 1]) count++;\n                console.log(\"line 106\")\n                if (j < this.cols - 1) if (g[i][j + 1]) count++;\n                if (j > 0) if (g[i][j - 1]) count++;\n                if (i < this.rows - 1) if (g[i + 1][j]) count++;\n                if (i < this.rows - 1 && j > 0) if (g[i + 1][j - 1]) count++;\n                if (i < this.rows - 1 && j < this.cols - 1) if (g[i + 1][j + 1]) count++;\n                if (g[i][j] && (count < 2 || count > 3)) g2[i][j] = false;\n                if (!g[i][j] && count === 3) g2[i][j] = true;\n            }\n        }\n        this.setState({\n            gridFull: g2,\n            generation: this.state.generation + 1\n        });\n    }\n\n    componentDidMount(){\n        this.seed();\n        // this.playButton();\n    }\n\n    render(){\n        return(\n            <div>\n                <h1>The Game of Life</h1>\n                <Buttons\n                playButton = {this.playButton}\n                pauseButton = {this.pauseButton}\n                slow = {this.slow}\n                fast = {this.fast}\n                clear = {this.clear}\n                seed = {this.seed}\n                gridSize = {this.gridSize}\n                />\n                <Grid\n                gridFull = {this.state.gridFull}\n                rows = {this.rows}\n                cols = {this.cols}\n                selectBox = {this.selectBox}\n                />\n                <h2>Generation: {this.state.generation}</h2>\n            </div>\n        );\n    }\n}\n\nfunction arrayClone(arr){\n    return JSON.parse(JSON.stringify(arr));\n}\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n"],"sourceRoot":""}